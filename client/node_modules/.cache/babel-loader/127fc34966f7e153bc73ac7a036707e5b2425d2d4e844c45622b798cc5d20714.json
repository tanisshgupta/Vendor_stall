{"ast":null,"code":"import api from './auth';\nexport const ordersAPI = {\n  // Get all orders (for current user)\n  getOrders: async () => {\n    try {\n      const response = await api.get('/orders');\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {\n        message: 'Failed to fetch orders'\n      };\n    }\n  },\n  // Get single order\n  getOrder: async id => {\n    try {\n      const response = await api.get(`/orders/${id}`);\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n        message: 'Failed to fetch order'\n      };\n    }\n  },\n  // Create order (vendors only)\n  createOrder: async orderData => {\n    try {\n      const response = await api.post('/orders', orderData);\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || {\n        message: 'Failed to create order'\n      };\n    }\n  },\n  // Update order status\n  updateOrderStatus: async (id, status) => {\n    try {\n      const response = await api.put(`/orders/${id}`, {\n        status\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response4;\n      throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || {\n        message: 'Failed to update order status'\n      };\n    }\n  },\n  // Delete order\n  deleteOrder: async id => {\n    try {\n      const response = await api.delete(`/orders/${id}`);\n      return response.data;\n    } catch (error) {\n      var _error$response5;\n      throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || {\n        message: 'Failed to delete order'\n      };\n    }\n  },\n  // Get vendor orders\n  getVendorOrders: async () => {\n    try {\n      const response = await api.get('/orders/vendor');\n      return response.data;\n    } catch (error) {\n      var _error$response6;\n      throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || {\n        message: 'Failed to fetch vendor orders'\n      };\n    }\n  },\n  // Get supplier orders\n  getSupplierOrders: async () => {\n    try {\n      const response = await api.get('/orders/supplier');\n      return response.data;\n    } catch (error) {\n      var _error$response7;\n      throw ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || {\n        message: 'Failed to fetch supplier orders'\n      };\n    }\n  },\n  // Get order statistics\n  getOrderStats: async () => {\n    try {\n      const response = await api.get('/orders/stats');\n      return response.data;\n    } catch (error) {\n      var _error$response8;\n      throw ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || {\n        message: 'Failed to fetch order statistics'\n      };\n    }\n  }\n};","map":{"version":3,"names":["api","ordersAPI","getOrders","response","get","data","error","_error$response","message","getOrder","id","_error$response2","createOrder","orderData","post","_error$response3","updateOrderStatus","status","put","_error$response4","deleteOrder","delete","_error$response5","getVendorOrders","_error$response6","getSupplierOrders","_error$response7","getOrderStats","_error$response8"],"sources":["C:/Users/hii/Desktop/Projects/streetfood-vendor-app/client/src/api/orders.js"],"sourcesContent":["import api from './auth';\r\n\r\nexport const ordersAPI = {\r\n  // Get all orders (for current user)\r\n  getOrders: async () => {\r\n    try {\r\n      const response = await api.get('/orders');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to fetch orders' };\r\n    }\r\n  },\r\n\r\n  // Get single order\r\n  getOrder: async (id) => {\r\n    try {\r\n      const response = await api.get(`/orders/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to fetch order' };\r\n    }\r\n  },\r\n\r\n  // Create order (vendors only)\r\n  createOrder: async (orderData) => {\r\n    try {\r\n      const response = await api.post('/orders', orderData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to create order' };\r\n    }\r\n  },\r\n\r\n  // Update order status\r\n  updateOrderStatus: async (id, status) => {\r\n    try {\r\n      const response = await api.put(`/orders/${id}`, { status });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to update order status' };\r\n    }\r\n  },\r\n\r\n  // Delete order\r\n  deleteOrder: async (id) => {\r\n    try {\r\n      const response = await api.delete(`/orders/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to delete order' };\r\n    }\r\n  },\r\n\r\n  // Get vendor orders\r\n  getVendorOrders: async () => {\r\n    try {\r\n      const response = await api.get('/orders/vendor');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to fetch vendor orders' };\r\n    }\r\n  },\r\n\r\n  // Get supplier orders\r\n  getSupplierOrders: async () => {\r\n    try {\r\n      const response = await api.get('/orders/supplier');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to fetch supplier orders' };\r\n    }\r\n  },\r\n\r\n  // Get order statistics\r\n  getOrderStats: async () => {\r\n    try {\r\n      const response = await api.get('/orders/stats');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to fetch order statistics' };\r\n    }\r\n  },\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}